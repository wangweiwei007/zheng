<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zheng.shop.dao.mapper.ShopSkuMapper">
  <resultMap id="BaseResultMap" type="com.zheng.shop.dao.model.ShopSku">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="product_id" jdbcType="BIGINT" property="productId" />
    <result column="color_id" jdbcType="BIGINT" property="colorId" />
    <result column="size" jdbcType="VARCHAR" property="size" />
    <result column="market_price" jdbcType="REAL" property="marketPrice" />
    <result column="price" jdbcType="REAL" property="price" />
    <result column="delive_fee" jdbcType="REAL" property="deliveFee" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="upper_limit" jdbcType="INTEGER" property="upperLimit" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, product_id, color_id, size, market_price, price, delive_fee, stock, upper_limit, 
    create_time
  </sql>
  <select id="selectByExample" parameterType="com.zheng.shop.dao.model.ShopSkuExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from shop_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from shop_sku
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from shop_sku
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.zheng.shop.dao.model.ShopSkuExample">
    delete from shop_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zheng.shop.dao.model.ShopSku">
    insert into shop_sku (id, product_id, color_id, 
      size, market_price, price, 
      delive_fee, stock, upper_limit, 
      create_time)
    values (#{id,jdbcType=BIGINT}, #{productId,jdbcType=BIGINT}, #{colorId,jdbcType=BIGINT}, 
      #{size,jdbcType=VARCHAR}, #{marketPrice,jdbcType=REAL}, #{price,jdbcType=REAL}, 
      #{deliveFee,jdbcType=REAL}, #{stock,jdbcType=INTEGER}, #{upperLimit,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zheng.shop.dao.model.ShopSku">
    insert into shop_sku
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="colorId != null">
        color_id,
      </if>
      <if test="size != null">
        size,
      </if>
      <if test="marketPrice != null">
        market_price,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="deliveFee != null">
        delive_fee,
      </if>
      <if test="stock != null">
        stock,
      </if>
      <if test="upperLimit != null">
        upper_limit,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=BIGINT},
      </if>
      <if test="colorId != null">
        #{colorId,jdbcType=BIGINT},
      </if>
      <if test="size != null">
        #{size,jdbcType=VARCHAR},
      </if>
      <if test="marketPrice != null">
        #{marketPrice,jdbcType=REAL},
      </if>
      <if test="price != null">
        #{price,jdbcType=REAL},
      </if>
      <if test="deliveFee != null">
        #{deliveFee,jdbcType=REAL},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="upperLimit != null">
        #{upperLimit,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zheng.shop.dao.model.ShopSkuExample" resultType="java.lang.Long">
    select count(*) from shop_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update shop_sku
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=BIGINT},
      </if>
      <if test="record.colorId != null">
        color_id = #{record.colorId,jdbcType=BIGINT},
      </if>
      <if test="record.size != null">
        size = #{record.size,jdbcType=VARCHAR},
      </if>
      <if test="record.marketPrice != null">
        market_price = #{record.marketPrice,jdbcType=REAL},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=REAL},
      </if>
      <if test="record.deliveFee != null">
        delive_fee = #{record.deliveFee,jdbcType=REAL},
      </if>
      <if test="record.stock != null">
        stock = #{record.stock,jdbcType=INTEGER},
      </if>
      <if test="record.upperLimit != null">
        upper_limit = #{record.upperLimit,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update shop_sku
    set id = #{record.id,jdbcType=BIGINT},
      product_id = #{record.productId,jdbcType=BIGINT},
      color_id = #{record.colorId,jdbcType=BIGINT},
      size = #{record.size,jdbcType=VARCHAR},
      market_price = #{record.marketPrice,jdbcType=REAL},
      price = #{record.price,jdbcType=REAL},
      delive_fee = #{record.deliveFee,jdbcType=REAL},
      stock = #{record.stock,jdbcType=INTEGER},
      upper_limit = #{record.upperLimit,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zheng.shop.dao.model.ShopSku">
    update shop_sku
    <set>
      <if test="productId != null">
        product_id = #{productId,jdbcType=BIGINT},
      </if>
      <if test="colorId != null">
        color_id = #{colorId,jdbcType=BIGINT},
      </if>
      <if test="size != null">
        size = #{size,jdbcType=VARCHAR},
      </if>
      <if test="marketPrice != null">
        market_price = #{marketPrice,jdbcType=REAL},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=REAL},
      </if>
      <if test="deliveFee != null">
        delive_fee = #{deliveFee,jdbcType=REAL},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="upperLimit != null">
        upper_limit = #{upperLimit,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zheng.shop.dao.model.ShopSku">
    update shop_sku
    set product_id = #{productId,jdbcType=BIGINT},
      color_id = #{colorId,jdbcType=BIGINT},
      size = #{size,jdbcType=VARCHAR},
      market_price = #{marketPrice,jdbcType=REAL},
      price = #{price,jdbcType=REAL},
      delive_fee = #{deliveFee,jdbcType=REAL},
      stock = #{stock,jdbcType=INTEGER},
      upper_limit = #{upperLimit,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>